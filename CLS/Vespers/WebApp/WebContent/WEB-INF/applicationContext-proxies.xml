<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (c) Canadian Light Source, Inc. All rights reserved.
	see license.txt for details.

	Description:
		Configuration for device proxies.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- Synchronize the device proxies by querying the respective devices. -->

	<bean id="synchronizeDeviceProxyEventListeners"
		class="ca.sciencestudio.device.proxy.event.SynchronizeDeviceProxyEventListeners">
		<constructor-arg ref="jmsDeviceMessageListenerContainer"/>
		<constructor-arg value="1000"/><!-- Milliseconds to wait for JMS to connect. -->
	</bean>

	<!-- Device Message Receiver -->

	<bean id="deviceMessageRecieverProxyEventPublisher"
		class="ca.sciencestudio.device.proxy.messaging.SimpleDeviceMessageReceiverProxyEventPublisher">
		<constructor-arg>
			<list>
				<ref bean="storageRingStatusProxy"/>
				<ref bean="shutterStatusProxy"/>
				<ref bean="monoStatusProxy"/>
				<ref bean="mirrorStatusProxy"/>
				<!--<ref bean="sampleStageXYZProxy"/>-->
				<ref bean="sampleStageHVProxy"/>
				<ref bean="sampleCameraProxy"/>
				<ref bean="fourElementDetectorProxy"/>
				<!--<ref bean="vortexDetectorProxy"/>-->
				<ref bean="scanDeviceProxy"/>
				<ref bean="beamlineInformationProxy"/>
				<ref bean="beamlineSessionProxy"/>
				<ref bean="ccdSetupProxy"/>
				<ref bean="ccdCollectionProxy"/>
				<ref bean="ccdStageProxy"/>
				<ref bean="ccdFileProxy"/>
			</list>
		</constructor-arg>
	</bean>

	<bean id="jmsDeviceMessageReceiver"
		class="ca.sciencestudio.device.messaging.jms.DelegatingJmsDeviceMessageReceiver">
		<property name="deviceMessageReceiver" ref="deviceMessageRecieverProxyEventPublisher"/>
	</bean>
	
	<bean id="jmsDeviceMessageListenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="destinationName" value="${jms.topic.subscriber}"/>
		<property name="connectionFactory" ref="jmsConnectionFactory"/>
		<property name="messageListener" ref="jmsDeviceMessageReceiver"/>
		<property name="pubSubDomain" value="true"/>
	</bean>
	
	<!-- Device Message Sender -->
	
	<bean id="jmsDeviceMessageTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="jmsConnectionFactory"/>
		<property name="explicitQosEnabled" value="true"/>
		<property name="deliveryPersistent" value="false"/>
		<property name="pubSubDomain" value="true"/>
	</bean>
	
	<bean id="deviceMessageSender" class="ca.sciencestudio.device.messaging.spring.SpringDeviceMessageSender">
		<property name="destinationName" value="${jms.topic.publisher}"/>
		<property name="jmsTemplate" ref="jmsDeviceMessageTemplate"/>
	</bean>
	
	<!-- Device State Maps -->

	<bean id="storageRingStatusProxy"
		class="ca.sciencestudio.device.proxy.event.ReadWriteDeviceProxyEventListener">
		<property name="deviceId" value="storageRingStatus"/>
		<property name="deviceMessageSender" ref="deviceMessageSender"/>
	</bean>

	<bean id="shutterStatusProxy"
		class="ca.sciencestudio.device.proxy.event.ReadWriteDeviceProxyEventListener">
		<property name="deviceId" value="shutterStatus"/>
		<property name="deviceMessageSender" ref="deviceMessageSender"/>
	</bean>

	<bean id="monoStatusProxy"
		class="ca.sciencestudio.device.proxy.event.ReadWriteDeviceProxyEventListener">
		<property name="deviceId" value="monoStatus"/>
		<property name="deviceMessageSender" ref="deviceMessageSender"/>
	</bean>

	<bean id="mirrorStatusProxy"
		class="ca.sciencestudio.device.proxy.event.ReadWriteDeviceProxyEventListener">
		<property name="deviceId" value="mirrorStatus"/>
		<property name="deviceMessageSender" ref="deviceMessageSender"/>
	</bean>

	<bean id="fourElementDetectorProxy"
		class="ca.sciencestudio.device.proxy.event.ReadWriteDeviceProxyEventListener">
		<property name="deviceId" value="fourElementDetector"/>
		<property name="deviceMessageSender" ref="deviceMessageSender"/>
	</bean>

	<!--<bean id="vortexDetectorProxy"
		class="ca.sciencestudio.device.proxy.event.ReadWriteDeviceProxyEventListener">
		<property name="deviceId" value="vortexDetector"/>
		<property name="deviceMessageSender" ref="deviceMessageSender"/>
	</bean>-->

	<bean id="sampleCameraProxy"
		class="ca.sciencestudio.device.proxy.event.ReadWriteDeviceProxyEventListener">
		<property name="deviceId" value="sampleCamera"/>
		<property name="deviceMessageSender" ref="deviceMessageSender"/>
	</bean>

	<bean id="sampleStageHVProxy"
		class="ca.sciencestudio.device.proxy.event.ReadWriteDeviceProxyEventListener">
		<property name="deviceId" value="sampleStageHV"/>
		<property name="deviceMessageSender" ref="deviceMessageSender"/>
	</bean>

	<!--<bean id="sampleStageXYZProxy"
		class="ca.sciencestudio.device.proxy.event.ReadWriteDeviceProxyEventListener">
		<property name="deviceId" value="sampleStageXYZ"/>
		<property name="deviceMessageSender" ref="deviceMessageSender"/>
	</bean>-->

	<bean id="scanDeviceProxy"
		class="ca.sciencestudio.vespers.device.proxy.event.ScanDeviceProxyEventListener">
		<property name="deviceId" value="scanDevice"/>
		<property name="scanAuthzDAO" ref="scanAuthzDAO"/>
		<property name="deviceMessageSender" ref="deviceMessageSender"/>
		<property name="beamlineSessionProxy" ref="beamlineSessionProxy"/>
	</bean>

	<bean id="beamlineInformationProxy"
		class="ca.sciencestudio.device.proxy.event.ReadWriteDeviceProxyEventListener">
		<property name="deviceId" value="beamlineInformation"/>
		<property name="deviceMessageSender" ref="deviceMessageSender"/>
	</bean>

	<bean id="beamlineSessionProxy"
		class="ca.sciencestudio.vespers.device.proxy.event.BeamlineSessionProxyEventListener">
		<property name="deviceId" value="beamlineSession"/>
		<property name="projectAuthzDAO" ref="projectAuthzDAO"/>
		<property name="sessionAuthzDAO" ref="sessionAuthzDAO"/>
		<property name="deviceMessageSender" ref="deviceMessageSender"/>
	</bean>

	<!-- CCD device proxies disabled for initial release. -->
	
	<bean id="ccdSetupProxy" class="ca.sciencestudio.device.proxy.event.ReadWriteDeviceProxyEventListener">
		<property name="deviceId" value="ccdSetup"></property>
		<property name="deviceMessageSender" ref="deviceMessageSender"/>
	</bean>

	<bean id="ccdCollectionProxy" class="ca.sciencestudio.device.proxy.event.ReadWriteDeviceProxyEventListener">
		<property name="deviceId" value="ccdCollection"/>
		<property name="deviceMessageSender" ref="deviceMessageSender"/>
	</bean>

	<bean id="ccdStageProxy" class="ca.sciencestudio.device.proxy.event.ReadWriteDeviceProxyEventListener">
		<property name="deviceId" value="ccdStage"/>
		<property name="deviceMessageSender" ref="deviceMessageSender"/>
	</bean>

	<bean id="ccdFileProxy" class="ca.sciencestudio.device.proxy.event.ReadWriteDeviceProxyEventListener">
		<property name="deviceId" value="ccdFile"/>
		<property name="deviceMessageSender" ref="deviceMessageSender"/>
	</bean>


	<!-- Axis PTZ Video Cameras -->

	<bean id="camera101"
		class="ca.sciencestudio.vespers.device.camera.axis.AxisHttpPTZCamera">
		<property name="name" value="camera101"/>
		<property name="baseUrl" value="http://camera-101"/>
	</bean>

	<bean id="camera201"
		class="ca.sciencestudio.vespers.device.camera.axis.AxisHttpPTZCamera">
		<property name="name" value="camera201"/>
		<property name="baseUrl" value="http://camera-201"/>
	</bean>

	<bean id="camera202"
		class="ca.sciencestudio.vespers.device.camera.axis.AxisHttpPTZCamera">
		<property name="name" value="camera202"/>
		<property name="baseUrl" value="http://camera-202"/>
	</bean>

</beans>
